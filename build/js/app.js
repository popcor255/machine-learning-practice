"use strict";function DNA(){this.genes=random(10),this.fitness=0,this.get=function(){return this.genes},this.calcFitness=function(n){this.fitness=n/1},this.crossover=function(n){var t=new DNA;return t.genes=(n.genes+this.genes)/2,console.log(t),t},this.mutate=function(n){random(1)<n&&(this.genes=random(10))}}function newChar(){var n=floor(random(63,122));return 63===n&&(n=32),64===n&&(n=46),String.fromCharCode(n)}
"use strict";function Population(t,i,s){this.population,this.matingPool,this.generations=0,this.finished=!1,this.target=t,this.mutationRate=i,this.perfectScore=1,this.averageFitness=0,this.best="",this.population=[];for(var e=0;e<s;e++)this.population[e]=new DNA;this.calcFitness=function(){for(var t=0;t<this.population.length;t++)this.population[t].calcFitness(this.target)},this.calcFitness(),this.generate=function(){for(var t=0,i=0,s=0,e=0;e<this.population.length;e++)if(this.population[e].fitness>t&&(t=this.population[e].fitness,this.best=this.population[e].get()),i+=this.population[e].fitness,s+=1,this.perfectScore==t){this.finished=!0,this.perfectScore=e;break}var o=[];for(e=0;e<this.population.length;e++){var n=this.acceptReject(t),a=this.acceptReject(t),h=n.crossover(a);h.mutate(this.mutationRate),o[e]=h}this.population=o,this.averageFitness=i/s,this.generations++},this.acceptReject=function(t){for(var i=1e4;i;){var s=floor(random(this.population.length)),e=this.population[s],o=random(t)+.01;if(console.log(o),e.fitness>o)return e;i--}return null},this.isFinished=function(){return this.best==this.target}}
"use strict";function setup(){createCanvas(400,400),background(0),pixelDensity(1),loadPixels();for(var e=new Population(1,.01,10),a=0;a<width;a++)for(var i=0;i<height;i++){for(var r=map(a,0,width,-2.5,2.5),t=map(i,0,height,-2.5,2.5),s=r/e.generate(),p=t/e.generate(),l=0;l<100;){var n=2*r*t;if(r=r*r-t*t+s,t=n+p,16<abs(r+t))break;l++}var o=map(l,0,100,0,255);100===l&&(o=255);var h=4*(a+i*width);pixels[h+0]=o,pixels[h+1]=o,pixels[h+2]=o,pixels[h+3]=255}updatePixels()}
//# sourceMappingURL=data:application/json;charset=utf8;base64,

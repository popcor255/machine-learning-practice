"use strict";function DNA(e){this.genes=[];for(var n=this.fitness=0;n<e;n++)this.genes[n]=newChar();this.getPhrase=function(){return this.genes.join("")},this.calcFitness=function(e){for(var n=0,t=0;t<this.genes.length;t++)this.genes[t]==e.charAt(t)&&n++;this.fitness=n/e.length},this.crossover=function(e){for(var n=new DNA(this.genes.length),t=floor(random(this.genes.length)),s=0;s<this.genes.length;s++)n.genes[s]=t<s?this.genes[s]:e.genes[s];return n},this.mutate=function(n){this.genes=this.genes.map(function(e){return random(1)<n?newChar():e})}}function newChar(){var e=floor(random(63,122));return 63===e&&(e=32),64===e&&(e=46),String.fromCharCode(e)}
"use strict";function Population(t,i,o){this.population,this.matingPool,this.generations=0,this.finished=!1,this.target=t,this.mutationRate=i,this.perfectScore=1,this.best="",this.population=[];for(var s=0;s<o;s++)this.population[s]=new DNA(this.target.length);this.calcFitness=function(){for(var t=0;t<this.population.length;t++)this.population[t].calcFitness(target)},this.calcFitness(),this.matingPool=[],this.naturalSelection=function(){this.matingPool=[];for(var t=0,i=0;i<this.population.length;i++)if(this.population[i].fitness>t&&(t=this.population[i].fitness,this.best=this.population[i].getPhrase()),this.perfectScore==t){this.finished=!0,this.perfectScore=i;break}for(i=0;i<this.population.length;i++)for(var o=map(this.population[i].fitness,0,t,0,1),s=floor(100*o),n=0;n<s;n++)this.matingPool.push(this.population[i])},this.generate=function(){for(var t=0;t<this.population.length;t++){var i=floor(random(this.matingPool.length)),o=floor(random(this.matingPool.length)),s=this.matingPool[i],n=this.matingPool[o],h=s.crossover(n);h.mutate(this.mutationRate),this.population[t]=h}this.generations++},this.isFinished=function(){return this.finished}}
"use strict";var bestPhrase,allPhrases,stats,target,popmax,mutationRate,population,answers=new Array(10);function preload(){}function setup(){(bestPhrase=createP("Best phrase:")).class("best"),(allPhrases=createP("All phrases:")).position(600,75),allPhrases.class("all"),(stats=createP("Stats")).class("stats"),population=new Population(target="To be or not to be",mutationRate=.01,popmax=200)}function draw(){population.calcFitness(),population.naturalSelection(),population.generate(),stats.html(population.best),answers.unshift(population.best),30<answers.length&&answers.pop(),allPhrases.html(answers.join("<br />")),population.isFinished()&&noLoop()}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
